openapi: 3.0.0
info:
  title: Content Delivery Service 
  description: Service for content delivery. Has 2 enpoint a private endpoint to manage contents and files , and a publick endpoint that works as a plain http web server to publicily serve files  
  version: 1.0.0
servers:
  - url: http://aggatecds.sme.entando.org
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    UploadResponse:
      type: array
      items:
        $ref: "#/components/schemas/UploadInfo"
      description: "Response of successful upload, will contain only one item"
    UploadInfo:
      type: object
      properties:
        status:
          type: string
          description: "Status feedback of the operation (Ok, Error) "
        filename:
          type: string
          description: "The file name "
        file:
          type: string
          description: "Not used reserved for future implementation "
        date:
          type: number
          description: "Epoch date of the operation  "
        path:
          type: string
          description: "The relative path of the file that will be used to retrieve it via web server endpoint"
        is_protected_file:
          type: string
          description: "If the file is protected or not (true/false)"
    DeleteResponse:
      type: object
      properties:
        status:
          type: string
          description: "Status feedback of the operation (Ok, Error) "
    ListResponse:
      type: array
      items:
        $ref: "#/components/schemas/ListInfo"
      description: "Response of list"
    ListInfo:
      type: object
      properties:
        name:
          type: string
          description: "Status feedback of the operation (Ok, Error) "
        last_modified_time:
          $ref:  "#/components/schemas/LastModifiedResponse"
        size:
          type: number
          description: "Size in byte"
        directory:
          type: boolean
          description: "True if a list itemn is a directory"
        path:
          type: string
          description: "The file absolute path"
        protected_folder:
          type: boolean
          description: "If the directory is a protected foldr o not"
    LastModifiedResponse:
      type: object
      properties:
        secs_since_epoch:
          type: number
          description: "Epoch of last modified date "
        nanos_since_epoch:
          type: number
          description: "Nanos related to secs_since_epoch "
paths:
  /api/v1/upload/:
    post:
      description: 'API that upload one file into the specified path. Overwrite always any existing file by name. Can be used to upload an archive with multiple file that could be decompress later'
      tags:
        - Services
      summary: Upload a file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                path:
                  type: string
                  example: images
                  description: 'directory path when the file will be saved. If you want upload a multiple file in one zip archive and extract with decompress , put into this parameter "archives" . If prtected is false will be added "public" as root relative dir  '
                protected:
                  type: boolean
                  example: 'false'
                  description: 'set if the resource is protected , set false to put resources in public directory'
                filename:
                  type: string
                  example: my_photo.jpg
                  description: 'the name with which the file will be saved in the directory specified in "path". Overwrites the original file name.'
                file:
                  type: string
                  format: binary
                  description: 'the file content'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/UploadResponse"
  /api/v1/delete/{path}:
    delete:
      parameters:
        - in: path
          name: path   
          required: true
          schema:
            type: string
          description: 'The relative path of the file or entire directory to delete'
      tags:
        - Services
      summary: Delete a file or a directory recursively 
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/DeleteResponse"
  /api/v1/list/{path}:
    get:
      parameters:
        - in: path
          name: path   
          required: true
          schema:
            type: string
          description: 'The relative path of the file or entire directory to listd'
      tags:
        - Services
      summary: list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/ListResponse"
        '404':
          description: File not found
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/ListResponse"

  /api/v1/utils/compress/:
    get:
      tags:
        - General
      summary: compress
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/utils/decompress/entando-data.tar.gz:
    get:
      tags:
        - General
      summary: decompress
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
